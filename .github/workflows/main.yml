# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  execute-merger:
    name: 🚀 Execute Merger
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: 🧩 Setup Merger
        uses: ./.github/actions/shared-job
        with:
          REQUIREMENTS_FILE: 'merger/requirements.txt'
      - name: 🧩 Run Merger
        env:
          GITHUB_API_KEY: ${{ secrets.GH_PAT }}
        run: |
          LAST_LINE=$(python merger/merger.py | tail -n 1)
          echo "LAST_LINE=${LAST_LINE}" >> $GITHUB_ENV
        continue-on-error: true
            
      - name: 🛸 Setup MITRE APT Data
        uses: ./.github/actions/shared-job
        with:
          REQUIREMENTS_FILE: 'apts/requirements.txt'
      - name: 👽 Get MITRE APT Data
        run: python apts/getAptData.py
              
      - name: 📦 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: generated files
          path: |
            dist/apts.json
            dist/apts_min.json
            dist/techniques.json
            dist/tools.json

      - name: 📝 Commit output files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add dist/
          git commit -m "${{ env.LAST_LINE }}"
          git push

  web-deploy:
    needs: [execute-merger]
    name: 🎉 Deploying
    runs-on: ubuntu-latest
    
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_PAT }}
          repository: ${{ secrets.REPO }}
          event-type: web-deploy
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
